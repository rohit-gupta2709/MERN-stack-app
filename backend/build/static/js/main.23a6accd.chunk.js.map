{"version":3,"sources":["context/authContext.js","Components/UIElements/Loader.js","Components/Hooks/auth-hook.js","Components/Navigation/Navbar.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","Loader","animation","role","className","logoutTimer","NavigationBar","auth","useContext","Navbar","collapseOnSelect","expand","bg","variant","Brand","to","Toggle","aria-controls","Collapse","id","Nav","exact","onClick","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","SignUp","App","useState","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","console","log","process","Provider","value","fallback","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23a6accd.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false,\r\n    userId: null,\r\n    token: null,\r\n    login: () => { },\r\n    logout: () => { }\r\n})","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString()\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};","import React, { useContext } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { AuthContext } from '../../context/authContext'\r\n\r\nconst NavigationBar = () => {\r\n    const auth = useContext(AuthContext)\r\n    return (\r\n        <Navbar className=\"container\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand to=\"/\">YourPlaces</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <NavLink className=\"nav-link\" to=\"/\" exact>ALL USERS</NavLink>\r\n                    {auth.isLoggedIn && (<NavLink className=\"nav-link\" to={`/${auth.userId}/places`} >MY PLACE</NavLink>)}\r\n                    <NavLink className=\"nav-link\" to=\"/places/new\">ADD PLACE</NavLink>\r\n                    {!auth.isLoggedIn && (<NavLink className=\"nav-link\" to=\"/auth\">AUTH</NavLink>)}\r\n                    {auth.isLoggedIn && (<NavLink className=\"nav-link\" onClick={auth.logout} to=\"/\">LOGOUT</NavLink>)}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavigationBar\r\n","import React, { Suspense } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\r\n// import Users from './user/pages/Users'\r\n// import NewPlace from './places/pages/NewPlace'\r\nimport Navbar from './Components/Navigation/Navbar'\r\n// import UserPlaces from './places/pages/UserPlaces'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n// import UpdatePlace from './places/pages/UpdatePlace'\r\n// import Auth from './user/pages/Auth'\r\n// import SignUp from './user/pages/SignUp'\r\nimport { AuthContext } from './context/authContext'\r\nimport { useAuth } from './Components/Hooks/auth-hook'\r\nimport Loader from './Components/UIElements/Loader'\r\n\r\nconst Users = React.lazy(() => import('./user/pages/Users'))\r\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'))\r\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'))\r\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'))\r\nconst Auth = React.lazy(() => import('./user/pages/Auth'))\r\nconst SignUp = React.lazy(() => import('./user/pages/SignUp'))\r\n\r\nconst App = () => {\r\n\r\n  const { token, login, logout, userId } = useAuth();\r\n  console.log(process.env)\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      isLoggedIn: !!token,\r\n      token: token,\r\n      userId: userId,\r\n      login: login,\r\n      logout: logout\r\n    }}>\r\n      <Router>\r\n        <Navbar />\r\n        <Suspense fallback={\r\n          <div className=\"center\">\r\n            <Loader />\r\n          </div>\r\n        }>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Users />\r\n            </Route>\r\n            <Route path=\"/auth\" exact component={Auth} />\r\n            <Route path=\"/auth/signup\" exact>\r\n              <SignUp />\r\n            </Route>\r\n            <Route path=\"/places/new\" exact>\r\n              <NewPlace />\r\n            </Route>\r\n            <Route path=\"/places/:placeId\" >\r\n              <UpdatePlace />\r\n            </Route>\r\n            <Route path=\"/:userId/places\">\r\n              <UserPlaces />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}