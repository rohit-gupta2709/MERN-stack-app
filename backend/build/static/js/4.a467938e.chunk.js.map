{"version":3,"sources":["Components/UIElements/ErrorModal.js","Components/Hooks/HttpHook.js","Components/UIElements/Card.js","Components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UserList.js","user/pages/Users.js"],"names":["ErrorModal","message","changeError","console","log","useState","show","setShow","handleClose","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","useHttpHook","loading","setLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrll","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","useEffect","forEach","abortCtrl","abort","clearError","Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","user","to","_id","name","places","length","UserList","items","map","Users","loadedUsers","setloadedUsers","process","fetchUsers","Loader"],"mappings":"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","file":"static/js/4.a467938e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nconst ErrorModal = ({ message, changeError }) => {\r\n    console.log(message)\r\n    const [show, setShow] = useState(true);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        changeError()\r\n    }\r\n    // const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>ERROR</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ErrorModal\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\nexport const useHttpHook = () => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState()\r\n\r\n    const activeHttpRequests = useRef([])\r\n\r\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        const httpAbortCtrll = new AbortController()\r\n        activeHttpRequests.current.push(httpAbortCtrll)\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortCtrll.signal\r\n            })\r\n\r\n            const responseData = await response.json()\r\n\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrll)\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message)\r\n            }\r\n            setLoading(false)\r\n            return responseData\r\n        } catch (err) {\r\n            setLoading(false)\r\n            setError(err.message)\r\n            throw err\r\n        }\r\n    }, [])\r\n\r\n    const clearError = () => {\r\n        setError(null)\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort())\r\n        }\r\n    }, [])\r\n\r\n    return { loading, error, sendRequest, clearError }\r\n\r\n}\r\n\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n    return (\r\n        <div className={`avatar ${props.className}`} style={props.style}>\r\n            <img\r\n                src={props.image}\r\n                alt={props.alt}\r\n                style={{ width: props.width, height: props.width }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react'\r\nimport Avatar from '../../Components/UIElements/Avatar'\r\nimport { Link } from 'react-router-dom'\r\nimport Card from '../../Components/UIElements/Card'\r\nimport './UserItem.css'\r\n\r\nconst UserItem = ({ user }) => {\r\n    return (\r\n        <li className=\"user-item\">\r\n            <Card className=\"user-item__content\">\r\n                <Link to={`/${user._id}/places`}>\r\n                    <div className=\"user-item__image\">\r\n                        <Avatar image={user.image.url} alt={user.name} />\r\n                    </div>\r\n                    <div className=\"user-item__info\">\r\n                        <h2>{user.name}</h2>\r\n                        <h3>\r\n                            {user.places.length} {user.places.length === 1 ? 'Place' : 'Places'}\r\n                        </h3>\r\n                    </div>\r\n                </Link>\r\n            </Card>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default UserItem\r\n","import React from 'react'\r\nimport './UserList.css'\r\nimport UserItem from './UserItem'\r\nimport Card from '../../Components/UIElements/Card'\r\n\r\nconst UserList = ({ items }) => {\r\n\r\n    if (items.length === 0) {\r\n        return <div className=\"center\">\r\n            <Card>\r\n                <h2>No users found.</h2>\r\n            </Card>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"users-list\">\r\n                {items.map(user =>\r\n                    <UserItem\r\n                        key={user._id}\r\n                        user={user}\r\n                    />\r\n                )}\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserList\r\n","import React, { useEffect, useState } from 'react'\r\nimport UserList from '../components/UserList'\r\nimport Loader from '../../Components/UIElements/Loader'\r\nimport ErrorModal from '../../Components/UIElements/ErrorModal'\r\nimport { useHttpHook } from '../../Components/Hooks/HttpHook'\r\n\r\nconst Users = () => {\r\n\r\n    const [loadedUsers, setloadedUsers] = useState()\r\n    const { loading, error, sendRequest, clearError } = useHttpHook()\r\n\r\n    console.log(process.env.REACT_APP_BACKEND_URL)\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users')\r\n                setloadedUsers(responseData)\r\n            } catch (err) { }\r\n        }\r\n        fetchUsers()\r\n    }, [sendRequest])\r\n\r\n    return (\r\n        <>\r\n            {loading && (\r\n                <div className=\"center\">\r\n                    <Loader />\r\n                </div>)}\r\n            {error && <ErrorModal message={error} changeError={clearError} />}\r\n            {!loading && loadedUsers && (<UserList items={loadedUsers} />)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users\r\n"],"sourceRoot":""}