{"version":3,"sources":["Components/UIElements/ErrorModal.js","Components/Hooks/HttpHook.js","Components/UIElements/Card.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["ErrorModal","message","changeError","console","log","useState","show","setShow","handleClose","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","useHttpHook","loading","setLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrll","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","useEffect","forEach","abortCtrl","abort","clearError","Card","props","className","style","children","PlaceItem","place","deletePlace","auth","useContext","AuthContext","deleteHandler","process","_id","Authorization","token","Loader","src","image","alt","title","description","address","isLoggedIn","userId","creator","to","Button","Modal","PlaceList","items","length","map","UserPlaces","loadedPlaces","setloadedPlaces","useParams","fetchPlaces","id","prevplaces","p"],"mappings":"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","file":"static/js/5.9b27df0d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nconst ErrorModal = ({ message, changeError }) => {\r\n    console.log(message)\r\n    const [show, setShow] = useState(true);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        changeError()\r\n    }\r\n    // const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>ERROR</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ErrorModal\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\nexport const useHttpHook = () => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState()\r\n\r\n    const activeHttpRequests = useRef([])\r\n\r\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        const httpAbortCtrll = new AbortController()\r\n        activeHttpRequests.current.push(httpAbortCtrll)\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortCtrll.signal\r\n            })\r\n\r\n            const responseData = await response.json()\r\n\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrll)\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message)\r\n            }\r\n            setLoading(false)\r\n            return responseData\r\n        } catch (err) {\r\n            setLoading(false)\r\n            setError(err.message)\r\n            throw err\r\n        }\r\n    }, [])\r\n\r\n    const clearError = () => {\r\n        setError(null)\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort())\r\n        }\r\n    }, [])\r\n\r\n    return { loading, error, sendRequest, clearError }\r\n\r\n}\r\n\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './PlaceItem.css'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { AuthContext } from '../../context/authContext'\r\nimport { useHttpHook } from '../../Components/Hooks/HttpHook'\r\nimport Loader from '../../Components/UIElements/Loader'\r\nimport ErrorModal from '../../Components/UIElements/ErrorModal'\r\n\r\nconst PlaceItem = ({ place, deletePlace }) => {\r\n\r\n    const auth = useContext(AuthContext)\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const { loading, error, sendRequest, clearError } = useHttpHook()\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const deleteHandler = async () => {\r\n        setShow(false)\r\n        try {\r\n            await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + `/places/${place._id}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                    Authorization: 'Bearor ' + auth.token\r\n                }\r\n            )\r\n            deletePlace(place._id)\r\n        } catch (err) { }\r\n\r\n    }\r\n    console.log(place)\r\n    return (\r\n        <>\r\n            {loading && (\r\n                <div className=\"center\">\r\n                    <Loader />\r\n                </div>\r\n            )}\r\n            {error && <ErrorModal message={error} changeError={clearError} />}\r\n            <div className=\"card place-item\">\r\n                <img className=\"card-img-top\" src={place.image.url} alt={place.title} />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{place.title}</h5>\r\n                    <p className=\"card-text\">{place.description}</p>\r\n                    <p className=\"card-text\">{place.address}</p>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {auth.isLoggedIn && auth.userId === place.creator && (<Link to={`/places/${place._id}`} className=\"card-link btn btn-warning\">Edit</Link>)}\r\n                    {auth.isLoggedIn && auth.userId === place.creator && (<Button className=\"card-link\" variant=\"danger\" onClick={handleShow}>Delete</Button>)}\r\n                    <Modal show={show} onHide={handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Confirmation required</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Are you sure you want to delete?</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                            <Button variant=\"primary\" onClick={deleteHandler}>Delete</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceItem\r\n","import React from 'react'\r\nimport './PlaceList.css'\r\nimport Card from '../../Components/UIElements/Card'\r\nimport PlaceItem from './PlaceItem'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PlaceList = ({ items, deletePlace }) => {\r\n\r\n    if (items.length === 0) {\r\n        return (\r\n            <div className=\"place-list center\">\r\n                <Card>\r\n                    <h2>No place found. Maybe create One? </h2>\r\n                    <Link className=\"btn btn-primary\" to=\"/places/new\">Share Place</Link>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ul className=\"place-list\">\r\n            <div className=\"card-group\">\r\n                {items.map(place =>\r\n                    <PlaceItem\r\n                        key={place._id}\r\n                        place={place}\r\n                        deletePlace={deletePlace}\r\n                    />)}\r\n            </div>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PlaceList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport PlaceList from '../components/PlaceList'\r\nimport { useHttpHook } from '../../Components/Hooks/HttpHook'\r\nimport Loader from '../../Components/UIElements/Loader'\r\nimport ErrorModal from '../../Components/UIElements/ErrorModal'\r\n\r\nconst UserPlaces = () => {\r\n\r\n    const { loading, error, sendRequest, clearError } = useHttpHook()\r\n    const [loadedPlaces, setloadedPlaces] = useState();\r\n    const userId = useParams().userId;\r\n\r\n    useEffect(() => {\r\n        const fetchPlaces = async () => {\r\n            try {\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/places/user/${userId}`)\r\n                setloadedPlaces(responseData)\r\n            } catch (err) { }\r\n        }\r\n        fetchPlaces()\r\n    }, [sendRequest, userId])\r\n\r\n    const deletePlaceHandler = (id) => {\r\n        console.log(id)\r\n        setloadedPlaces(prevplaces => prevplaces.filter(p => p._id !== id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading && (\r\n                <div className=\"center\">\r\n                    <Loader />\r\n                </div>\r\n            )}\r\n            {error && <ErrorModal message={error} changeError={clearError} />}\r\n            {!loading && loadedPlaces && <PlaceList items={loadedPlaces} deletePlace={deletePlaceHandler} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserPlaces\r\n"],"sourceRoot":""}